Certainly! To handle form submissions with raw Node.js (without Express), you need to manually handle HTTP requests and parse the form data. Here's a basic example of how to achieve this:

### 1. **Set Up the Server**

First, create a file named `server.js`. This server will handle incoming HTTP requests and process form data.

```js
// server.js
const http = require('http');
const url = require('url');
const querystring = require('querystring');
const fs = require('fs');
const path = require('path');

const port = 3000;

const server = http.createServer((req, res) => {
  const parsedUrl = url.parse(req.url);
  
  // Serve the form HTML
  if (parsedUrl.pathname === '/') {
    fs.readFile(path.join(__dirname, 'public', 'form.html'), (err, data) => {
      if (err) {
        res.writeHead(500, { 'Content-Type': 'text/plain' });
        res.end('Internal Server Error');
        return;
      }
      res.writeHead(200, { 'Content-Type': 'text/html' });
      res.end(data);
    });
  
  // Handle form submission
  } else if (parsedUrl.pathname === '/submit' && req.method === 'POST') {
    let body = '';
    req.on('data', chunk => {
      body += chunk.toString();
    });
    req.on('end', () => {
      const parsedBody = querystring.parse(body);
      const name = parsedBody.name;
      const email = parsedBody.email;
      res.writeHead(200, { 'Content-Type': 'text/html' });
      res.end(`Received the form submission: Name - ${name}, Email - ${email}`);
    });

  // Handle 404
  } else {
    res.writeHead(404, { 'Content-Type': 'text/plain' });
    res.end('Not Found');
  }
});

server.listen(port, () => {
  console.log(`Server is running at http://localhost:${port}`);
});
```

### 2. **Create the HTML Form**

Create a `public` directory and add a file named `form.html` inside it. This form will send data to the server.

```html
<!-- public/form.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Example</title>
</head>
<body>
    <h1>Form Submission</h1>
    <form action="/submit" method="post">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required>
        <br>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <br>
        <button type="submit">Submit</button>
    </form>
</body>
</html>
```

### 3. **Explanation**

- **Server Setup**: The server listens on port 3000 and responds based on the URL path and HTTP method.
  - `GET /`: Serves the form HTML from the `public` directory.
  - `POST /submit`: Parses form data using `querystring` and sends a response with the form data.
- **Parsing Data**: The `data` event gathers chunks of form data, and the `end` event processes the complete data.
- **File Serving**: Uses `fs.readFile` to serve static HTML files.

Run your server with `node server.js`, and you can visit `http://localhost:3000` to see the form and submit data.

If you have more questions or need additional details, feel free to ask!