Redirect to other pages:



First we need to import libraries :
npm i -D react-router-dom@latest

Code : Explained below :

Index Js fiel mein : 

root.render(
  <BrowserRouter>
  <React.StrictMode>
    <App />
  </React.StrictMode>
  </BrowserRouter>
);



App js : This file or any other file jisme    se Dusre page par redirect karna hai 
App.js mein jo content routes ke bahar likha hai wo change nahi hota hai 


Routes element se redirect karne pe url bar 
mein path dalne pe page khulega 

import React from 'react';
import Contact from './contact';

import { Routes,Route ,Redirect} from 'react-router-dom';
import './App.css';

function App() {
  return (<>
  
  <h1>Hello</h1>
  <Routes>
    
    <Route path='/contact' element={<Contact/>}  />  element ko end karna jaruri hai 
    
   </Routes>
  
  
  </>);    
}


Button click pe page redirect karne    <Route element se path set karna hoga aur us path se kis page pe redirect hona hai 
wo bhi dekhna hai 

import React from "react";
import { useNavigate } from "react-router-dom";

function Home(){

    const navigate = useNavigate();
    const handleClick = e => {
    e.preventDefault();
    navigate('/home');
  }

    return(<>
      <button onClick={handle}> click here</button>
    </>)
}
export default Home;


One another thing :

<Navigate to="/path defined in route element nest " />  

_________________________
 


2 ways are given 


1. First create an / render an html page inside a function or class called component

Component banega js file mein and      waha se export karna hai ek js file mein 1 
hi export ho sakta hai har html ke liye new js file banao
libraries import karke.
 

Index .js mein import hoga aur redirect hoga 

Then Component ki file mein bhi  <Outlet> and <Link> elements. add karne hote hai

For using in our template 
import Link and Outlet in custom html component
import { Outlet, Link } from "react-router-dom";

Then in navigation div use <Link element instead of <a href 

<Link className='active' to="/"><i class="fa fa-fw fa-home"></i>Sanskar</Link> we can put class and do css 

Put <Outlet/> at end of codes 





Example Explained
We wrap our content first with <BrowserRouter>.

Then we define our <Routes>. An application can have multiple <Routes>. Our basic example only uses one.

<Route>s can be nested. The first <Route> has a path of / and renders the Layout component.

/ adds with path so path = blog becomes /blogs

The nested <Route>s inherit and add to the parent route. So the blogs path is combined with the parent and becomes /blogs.

The Home component route does not have a path 
but has an index attribute. That specifies this route as the default route for the parent route, which is /.

Setting the path to * will act as a catch-all for any undefined URLs. This is great for a 404 error page.



Code to redirect : in Index.js file
Import components to switch and libraries

import ReactDOM from "react-dom/client";
import { BrowserRouter, Routes, Route } from "react-router-dom";
import Layout from "./pages/Layout";
import Home from "./pages/Home";
import Blogs from "./pages/Blogs";
import Contact from "./pages/Contact";
import NoPage from "./pages/NoPage";

export default function App() {
  return (
    <BrowserRouter>
      <Routes>
        <Route path="/" element={<Layout />}>

  // other routes are inside this route
          <Route index element={<Home />} />
          <Route path="blogs" element={<Blogs />} />
          <Route path="contact" element={<Contact />} />
          <Route path="*" element={<NoPage />} />
        
</Route> that route element ended here
      </Routes>
    </BrowserRouter>
  );
}

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);


_______________________________________________________
Pages / Components
The Layout component has <Outlet> and <Link> elements.

The <Outlet> renders the current route selected.

<Link> is used to set the URL and keep track of browsing history.

Anytime we link to an internal path, 
we will use <Link> instead of <a href="">.

The "layout route" is a shared component that inserts common content on all pages, such as a navigation menu.

Layout js

import { Outlet, Link } from "react-router-dom";

const Layout = () => {
  return (
    <>
      <nav>
        <ul>
          <li>
            <Link to="/">Home</Link>
          </li>
          <li>
            <Link to="/blogs">Blogs</Link>
          </li>
          <li>
            <Link to="/contact">Contact</Link>
          </li>
        </ul>
      </nav>

      <Outlet />
    </>
  )
};

export default Layout;


________________________________________________________________________
2 way : 
Redirection App.and indexjs  mein hoga :

We can use various Objects of react dom to redirect 

1 . Object : Switch , Link , Route , BrowserRoute

see top page 

___________________________________________________
Import assets :

import logo from './logo.svg';


______________________________________________________________________
Displaying data : 

const user = {
  name: 'Hedy Lamarr',
  imageUrl: 'https://i.imgur.com/yXOvdOSs.jpg',
  imageSize: 90,
};

export default function Profile() {
  return (
    <>
      <h1>{user.name}</h1>
      <img
        className="avatar"
        src={user.imageUrl}
        alt={'Photo of ' + user.name}
        style={{
          width: user.imageSize,
          height: user.imageSize
        }}
      />
    </>
  );
}


__________________________________________________________
Conditional rendering :

let content;
if (isLoggedIn) {
  content = <AdminPanel />;
} else {
  content = <LoginForm />;
}
return (
  <div>
    {content}
  </div>
);

If you prefer more compact code, you can use the conditional ? operator. Unlike if, it works inside JSX:

<div>
  {isLoggedIn ? (
    <AdminPanel />
  ) : (
    <LoginForm />
  )}
</div>

_________________________________________________
Put Image url :
mport MyImage from './thumbnail.webp';  //Import image and use 

export default function App() {
  return (
    <div>
      {/* üëáÔ∏è local image */}
      <img src={MyImage} alt="horse" />

      {/* üëáÔ∏è external image */}
      <img
        src="https://bobbyhadz.com/images/blog/react-prevent-multiple-button-clicks/thumbnail.webp"
        alt="car"
      />
    </div>

Form : 
<Form>
      <Form.Group className="mb-3" controlId="formBasicEmail">
        <Form.Label>Email address</Form.Label>
        <Form.Control type="email" placeholder="Enter email" />
        <Form.Text className="text-muted">
          We'll never share your email with anyone else.
        </Form.Text>
      </Form.Group>

      <Form.Group className="mb-3" controlId="formBasicPassword">
        <Form.Label>Password</Form.Label>
        <Form.Control type="password" placeholder="Password" />
      </Form.Group>
      <Form.Group className="mb-3" controlId="formBasicCheckbox">
        <Form.Check type="checkbox" label="Check me out" />
      </Form.Group>
      <Button variant="primary" type="submit">
        Submit
      </Button>
    </Form>
